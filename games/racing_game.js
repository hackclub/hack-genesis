/*
@title: Car Race
@author: saumil
@tags: ['strategy']
@addedOn: 2024-06-20

Collect all green stuff (grass) and go to the blue thing (the destination) 
*/

const car = 'c';
const destination = 'd';
const obstacle = 'o';
const road = 'r';
const grass = 'g';
const player = 'p';

setLegend(
  [car, bitmap`
................
.....44444......
...44.....44....
..4.........4...
.4....4.4....4..
4....44444....4.
4....4.4.4....4.
4...4444444...4.
4...4.4.4.4...4.
4..444444444..4.
.4.4.4.4.4.4.4..
..4.........4...
...44.....44....
.....44444......
................`],
  [destination, bitmap`
................
.....55555......
...55.....55....
..5.........5...
.5....5.5....5..
5....55555....5.
5....5.5.5....5.
5...5555555...5.
5...5.5.5.5...5.
5..555555555..5.
.5.5.5.5.5.5.5..
..5.........5...
...55.....55....
.....55555......
................`],
  [obstacle, bitmap`
................
.....11111......
...11.....11....
..1.........1...
.1....1.1....1..
1....11111....1.
1....1.1.1....1.
1...1111111...1.
1...1.1.1.1...1.
1..111111111..1.
.1.1.1.1.1.1.1..
..1.........1...
...11.....11....
.....11111......
................`],
  [grass, bitmap`
..4.........4...
...4.........4..
...44........4..
....4.........4.
....44........4.
.....4........4.
.....44......4..
.....44...4.....
.....444...4....
4.....44....4...
.4....44....4...
.4...444.....4..
.4...44......4..
.4...........4..
4...........4...
................`],
  [road, bitmap`
................
................
................
................
................
................
................
................
................
................
................
................
................
................
................
................
................`],
  [player, bitmap`
................
................
.....00000......
....0.....0.....
...0.0.0.0.0....
..0...000...0...
..0....0....0...
..0...000...0...
..0.0.0.0.0.0...
....0.....0.....
.....00000......
................
................
................
................`]
);

setSolids([player, obstacle, car]);
setPushables({
  [player]: []
});

let level = 0;
const levels = [
  map`
pgr
gor
ggd`,
  map`
pgggr
gorod
gggrr`,
  map`
pgord
..gor
gorgr`,
  map`
gooogg
..o..g
gggggg
g.d.gg
g...gg
ggp.gg`,
  map`
gggggg
goooog
gpgggd
gororr`,
  map`
g........
g..g.g.p.
g.gg.gg..
.gg...g..
..o...go.
......oo.
..ooooo..
..od.....
ggggggggg`,
  map`
pgggggggg
oooooooog
ogggggggg
ogggggggg
oooooooog
gggoggdog
gogggggog
gooooooog
ggggggggg`

];

let destinationPosition = null;

const setLevel = (lvl) => {
  setMap(levels[lvl]);
  destinationPosition = getFirst(destination); 
}

setLevel(level);

const pushPlayer = (dx, dy) => {
  const playerTile = getFirst(player);
  if (playerTile) {
    const newX = playerTile.x + dx;
    const newY = playerTile.y + dy;
    if (newX >= 0 && newX < width() && newY >= 0 && newY < height()) {
      const targetTile = getTile(newX, newY);
      if (!targetTile.some(tile => tile.type === obstacle) && !targetTile.some(tile => tile.type === car)) {
        clearTile(playerTile.x, playerTile.y);
        addSprite(newX, newY, player);
      }
    }
  }
};

const checkDestination = () => {
  const playerTile = getFirst(player);
  if (playerTile) {
    const targetTile = getTile(playerTile.x, playerTile.y);
    if (targetTile.some(tile => tile.type === destination)) {
      if (getAll(grass).length === 0) {
        setTimeout(() => {
          if (level < levels.length - 1) {
            level++;
            setLevel(level);
          } else {
            clearText();
            addText("You win!", { y: 6, color: color`3`, duration: 2000 });
              playTune(tune`
204.08163265306123: C4~204.08163265306123 + G4/204.08163265306123,
204.08163265306123: C4~204.08163265306123 + D4~204.08163265306123 + A4/204.08163265306123,
204.08163265306123: D4~204.08163265306123 + A4/204.08163265306123,
204.08163265306123: D4~204.08163265306123 + E4~204.08163265306123 + A4/204.08163265306123 + B4/204.08163265306123,
204.08163265306123: E4~204.08163265306123 + B4/204.08163265306123,
204.08163265306123: E4~204.08163265306123 + F4~204.08163265306123 + B4/204.08163265306123,
204.08163265306123: F4~204.08163265306123 + G4~204.08163265306123 + C5/204.08163265306123,
204.08163265306123: G4~204.08163265306123 + D5/204.08163265306123,
204.08163265306123: A4~204.08163265306123 + D5/204.08163265306123 + E5/204.08163265306123,
204.08163265306123: A4~204.08163265306123 + E5/204.08163265306123,
204.08163265306123: B4~204.08163265306123 + E5/204.08163265306123 + F5/204.08163265306123,
204.08163265306123: B4~204.08163265306123 + C5~204.08163265306123 + F5/204.08163265306123,
204.08163265306123: C5~204.08163265306123 + F5/204.08163265306123 + G5/204.08163265306123,
204.08163265306123: C5~204.08163265306123 + D5~204.08163265306123 + G5/204.08163265306123,
204.08163265306123: D5~204.08163265306123 + A5/204.08163265306123,
204.08163265306123: E5~204.08163265306123 + A5/204.08163265306123,
204.08163265306123: E5~204.08163265306123 + F5~204.08163265306123 + A5/204.08163265306123 + B5/204.08163265306123,
204.08163265306123: F5~204.08163265306123 + G5~204.08163265306123 + B5/204.08163265306123,
204.08163265306123: G5~204.08163265306123,
204.08163265306123: A5~204.08163265306123,
204.08163265306123: A5~204.08163265306123 + B5~204.08163265306123,
204.08163265306123: B5~204.08163265306123,
204.08163265306123: B5^204.08163265306123 + A5^204.08163265306123 + F5-204.08163265306123 + E5-204.08163265306123,
204.08163265306123: G5^204.08163265306123 + F5^204.08163265306123 + B5^204.08163265306123 + E5-204.08163265306123 + D5-204.08163265306123,
204.08163265306123: F5~204.08163265306123 + C5-204.08163265306123,
204.08163265306123: D5^204.08163265306123 + B5~204.08163265306123 + F5~204.08163265306123 + C5-204.08163265306123 + B4-204.08163265306123,
204.08163265306123: B4^204.08163265306123 + G5^204.08163265306123 + B5~204.08163265306123 + A5~204.08163265306123 + A4-204.08163265306123,
204.08163265306123: B4^204.08163265306123 + A4^204.08163265306123 + A5~204.08163265306123 + G5~204.08163265306123 + G4-204.08163265306123,
204.08163265306123: A4^204.08163265306123 + G4^204.08163265306123 + F4^204.08163265306123 + E4^204.08163265306123 + D4^204.08163265306123,
204.08163265306123: D4^204.08163265306123 + C4^204.08163265306123 + E5~204.08163265306123 + D5~204.08163265306123 + G4-204.08163265306123,
204.08163265306123: C4^204.08163265306123 + F4-204.08163265306123,
204.08163265306123: C4-204.08163265306123 + E4-204.08163265306123 + D4-204.08163265306123`);
              playTune(tune`
123.45679012345678: C4~123.45679012345678 + G4/123.45679012345678,
123.45679012345678: C4~123.45679012345678 + D4~123.45679012345678 + A4/123.45679012345678,
123.45679012345678: D4~123.45679012345678 + A4/123.45679012345678,
123.45679012345678: D4~123.45679012345678 + E4~123.45679012345678 + A4/123.45679012345678 + B4/123.45679012345678,
123.45679012345678: E4~123.45679012345678 + B4/123.45679012345678,
123.45679012345678: E4~123.45679012345678 + F4~123.45679012345678 + B4/123.45679012345678,
123.45679012345678: F4~123.45679012345678 + G4~123.45679012345678 + C5/123.45679012345678,
123.45679012345678: G4~123.45679012345678 + D5/123.45679012345678,
123.45679012345678: A4~123.45679012345678 + D5/123.45679012345678 + E5/123.45679012345678,
123.45679012345678: A4~123.45679012345678 + E5/123.45679012345678,
123.45679012345678: B4~123.45679012345678 + E5/123.45679012345678 + F5/123.45679012345678,
123.45679012345678: B4~123.45679012345678 + C5~123.45679012345678 + F5/123.45679012345678,
123.45679012345678: C5~123.45679012345678 + F5/123.45679012345678 + G5/123.45679012345678,
123.45679012345678: C5~123.45679012345678 + D5~123.45679012345678 + G5/123.45679012345678,
123.45679012345678: D5~123.45679012345678 + A5/123.45679012345678,
123.45679012345678: E5~123.45679012345678 + A5/123.45679012345678,
123.45679012345678: E5~123.45679012345678 + F5~123.45679012345678 + A5/123.45679012345678 + B5/123.45679012345678,
123.45679012345678: F5~123.45679012345678 + G5~123.45679012345678 + B5/123.45679012345678,
123.45679012345678: G5~123.45679012345678,
123.45679012345678: A5~123.45679012345678,
123.45679012345678: A5~123.45679012345678 + B5~123.45679012345678,
123.45679012345678: B5~123.45679012345678,
123.45679012345678: B5^123.45679012345678 + A5^123.45679012345678 + F5-123.45679012345678 + E5-123.45679012345678,
123.45679012345678: G5^123.45679012345678 + F5^123.45679012345678 + B5^123.45679012345678 + E5-123.45679012345678 + D5-123.45679012345678,
123.45679012345678: F5~123.45679012345678 + C5-123.45679012345678,
123.45679012345678: D5^123.45679012345678 + B5~123.45679012345678 + F5~123.45679012345678 + C5-123.45679012345678 + B4-123.45679012345678,
123.45679012345678: B4^123.45679012345678 + G5^123.45679012345678 + B5~123.45679012345678 + A5~123.45679012345678 + A4-123.45679012345678,
123.45679012345678: B4^123.45679012345678 + A4^123.45679012345678 + A5~123.45679012345678 + G5~123.45679012345678 + G4-123.45679012345678,
123.45679012345678: A4^123.45679012345678 + G4^123.45679012345678 + F4^123.45679012345678 + E4^123.45679012345678 + D4^123.45679012345678,
123.45679012345678: D4^123.45679012345678 + C4^123.45679012345678 + E5~123.45679012345678 + D5~123.45679012345678 + G4-123.45679012345678,
123.45679012345678: C4^123.45679012345678 + F4-123.45679012345678,
123.45679012345678: C4-123.45679012345678 + E4-123.45679012345678 + D4-123.45679012345678`);
              playTune(tune`
80: C4~80 + G4/80,
80: C4~80 + D4~80 + A4/80,
80: D4~80 + A4/80,
80: D4~80 + E4~80 + A4/80 + B4/80,
80: E4~80 + B4/80,
80: E4~80 + F4~80 + B4/80,
80: F4~80 + G4~80 + C5/80,
80: G4~80 + D5/80,
80: A4~80 + D5/80 + E5/80,
80: A4~80 + E5/80,
80: B4~80 + E5/80 + F5/80,
80: B4~80 + C5~80 + F5/80,
80: C5~80 + F5/80 + G5/80,
80: C5~80 + D5~80 + G5/80,
80: D5~80 + A5/80,
80: E5~80 + A5/80,
80: E5~80 + F5~80 + A5/80 + B5/80,
80: F5~80 + G5~80 + B5/80,
80: G5~80,
80: A5~80,
80: A5~80 + B5~80,
80: B5~80,
80: B5^80 + A5^80 + F5-80 + E5-80,
80: G5^80 + F5^80 + B5^80 + E5-80 + D5-80,
80: F5~80 + C5-80,
80: D5^80 + B5~80 + F5~80 + C5-80 + B4-80,
80: B4^80 + G5^80 + B5~80 + A5~80 + A4-80,
80: B4^80 + A4^80 + A5~80 + G5~80 + G4-80,
80: A4^80 + G4^80 + F4^80 + E4^80 + D4^80,
80: D4^80 + C4^80 + E5~80 + D5~80 + G4-80,
80: C4^80 + F4-80,
80: C4-80 + E4-80 + D4-80`);

          }
        }, 200);
      } else {
        addText("Collect all grass!", { y: 15, color: color`3`, duration: 0.5 });
        addText("Press J to Reset", { y: 1, color: color`3`, duration: 0.5 });
        addSprite(destinationPosition.x, destinationPosition.y, destination);
      }
    }
  }
};


onInput('a', () => pushPlayer(-1, 0));
onInput('d', () => pushPlayer(1, 0));
onInput('w', () => pushPlayer(0, -1));
onInput('s', () => pushPlayer(0, 1));
onInput('j', () => {
  clearText();
  for (let x = 0; x < width(); x++) {
    for (let y = 0; y < height(); y++) {
      clearTile(x, y);
    }
  }
  setLevel(level);
});


afterInput(() => {
  checkDestination();
});
